import math
import numpy as np
from fft import *

class procedimiento():
	def proceso(self, senal01, senal02):
		tamano01 = len(senal01)
		tamano02 = len(senal02)
		valor=20
		l=tamano01/valor
		l=int(math.floor(l))
		if l>=len(self.senal02):
			ex=math.log(l,2)
			lon_mx=len(self.senal01)
		
			
		else:
			ex=math.log(len(self.senal02),2)
			lon_mx=len(self.senal02)

		self.ex=math.floor(ex)
		v_max=[]
		v_indice=[]
		for p in range(valor):
			aux=[]
			#print '==== valor de P ===', p
			if p==0:
				parte=self.senal01[0:l]
			else:
				parte=self.senal01[l*p: l*(p+1)]
			#====================== se realiza la transformada rapida de fourier para la senal01 y senal02================
			fourier=fft()
			f0=fourier.transformada(parte, self.ex)
			f1=fourier.transformada(self.senal02, self.ex)
			
			c=[]

		
			for i in range(len(f0)):
				self.c.append(f1[i].conjugate()*f0[i])

			#====================== se realiza la transformada inversa para localizar el punto maximo de correlacion================
			self.R_xy = fourier.inversa(self.c, self.ex)

			self.R_xy=np.asarray(self.R_xy)
			self.R_xy=abs(self.R_xy)
			#====================== se calcula la energia de cada senal================
			L2 = [n2**2 for n2 in self.senal02]
			n=sum(L2)
		
			L1 = [n1**2 for n1 in parte]
			m=sum(L1)
			#====================== se normaliza la correlacion, valores de 0 a 1 ================
			for i in range(len(R_xy)):
		
				self.R_xy[i]=self.R_xy[i]/n
		
			self.R_xy=self.R_xy.tolist()
			#====================== se calcula el valor maximo e indice de correlacion por ventana ================
			maximo=max(self.R_xy)
			indice=self.R_xy.index(maximo)
			if maximo>=5 and maximo <1.003:
				v_max.append(maximo)
				v_indice.append(indice+(p*l))

		valores=[]
		valores.append(v_max)
		valores.append(v_indice)
		return valores

